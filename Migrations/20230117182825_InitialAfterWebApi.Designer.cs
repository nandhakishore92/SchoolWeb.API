// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolWeb.API.DataAccessLayer;

#nullable disable

namespace SchoolWeb.API.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    [Migration("20230117182825_InitialAfterWebApi")]
    partial class InitialAfterWebApi
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SchoolWeb.API.Models.AcademicYear", b =>
                {
                    b.Property<int>("AcademicYearId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcademicYearId"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCurrentAcademicYear")
                        .HasColumnType("bit");

                    b.Property<string>("ShortYearString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("YearString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AcademicYearId");

                    b.ToTable("AcademicYear");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.BusFeesArchive", b =>
                {
                    b.Property<int>("BusFeesArchiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusFeesArchiveId"));

                    b.Property<int>("AcademicYearId")
                        .HasColumnType("int");

                    b.Property<int>("BusFees")
                        .HasColumnType("int");

                    b.Property<int?>("BusStopId")
                        .HasColumnType("int");

                    b.Property<int?>("RouteId")
                        .HasColumnType("int");

                    b.Property<int>("SpecialClassFees")
                        .HasColumnType("int");

                    b.HasKey("BusFeesArchiveId");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("BusStopId");

                    b.HasIndex("RouteId");

                    b.ToTable("BusFeesArchives");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.BusStop", b =>
                {
                    b.Property<int>("BusStopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusStopId"));

                    b.Property<string>("BusStopName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocalityId")
                        .HasColumnType("int");

                    b.HasKey("BusStopId");

                    b.HasIndex("LocalityId");

                    b.ToTable("BusStops");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"));

                    b.Property<int>("BookFees")
                        .HasColumnType("int");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExamFees")
                        .HasColumnType("int");

                    b.Property<bool>("HasSpecialClass")
                        .HasColumnType("bit");

                    b.Property<int>("SchoolManagementFees")
                        .HasColumnType("int");

                    b.Property<int>("TuitionFees")
                        .HasColumnType("int");

                    b.HasKey("ClassId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.ClassFeesArchive", b =>
                {
                    b.Property<int>("ClassFeesArchiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassFeesArchiveId"));

                    b.Property<int>("AcademicYearId")
                        .HasColumnType("int");

                    b.Property<int>("BookFees")
                        .HasColumnType("int");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("ExamFees")
                        .HasColumnType("int");

                    b.Property<bool>("HasSpecialClass")
                        .HasColumnType("bit");

                    b.Property<int>("SchoolManagementFees")
                        .HasColumnType("int");

                    b.Property<int>("TuitionFees")
                        .HasColumnType("int");

                    b.HasKey("ClassFeesArchiveId");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("ClassId");

                    b.ToTable("ClassFeesArchives");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.ExceptionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LogTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StackTrace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ExceptionLogs");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Bill", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillId"));

                    b.Property<decimal>("BillAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("BillDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BillNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BillStatus")
                        .HasColumnType("int");

                    b.Property<int>("ExpenseVendorMapperId")
                        .HasColumnType("int");

                    b.Property<decimal>("PendingAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BillId");

                    b.HasIndex("ExpenseVendorMapperId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.BillPaymentHistory", b =>
                {
                    b.Property<int>("BillPaymentHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillPaymentHistoryId"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("BillNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BillPaymentHistoryId");

                    b.HasIndex("BillId");

                    b.ToTable("BillPaymentHistory");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Building.BuildingMaterialExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<string>("MaterialType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ExpenseId");

                    b.ToTable("BuildingMaterialExpenses");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Building.ConstructionLabourExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstructionLabourType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ExpenseId");

                    b.ToTable("ConstructionLabourExpenses");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Building.ElectricityBoardExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PeriodFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServiceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ExpenseId");

                    b.ToTable("ElectricityBoardExpenses");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Building.RenewalAndLicenseExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<string>("LicenseType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ExpenseId");

                    b.ToTable("RenewalAndLicenseExpenses");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Expense", b =>
                {
                    b.Property<int>("ExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpenseId"));

                    b.Property<bool>("IsPersonal")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("ExpenseId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.ExpenseVendorMapper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseId");

                    b.HasIndex("VendorId");

                    b.ToTable("ExpenseVendorMappers");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Inventory.BooksAndNotesExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ExpenseId");

                    b.ToTable("BooksAndNotesExpenses");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Inventory.StationaryExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("StationaryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ExpenseId");

                    b.ToTable("StationaryExpenses");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Inventory.UniformExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<float>("PantMetres")
                        .HasColumnType("real");

                    b.Property<float>("ShirtMetres")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ExpenseId");

                    b.ToTable("UniformExpenses");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Loan.AuxiloExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ExpenseId");

                    b.ToTable("AuxiloExpenses");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Loan.NonEmiLoanPrincipalExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ExpenseId");

                    b.ToTable("NonEmiLoanPrincipalExpenses");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Loan.OutsideLoanExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<string>("InterestMonth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InterestYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ExpenseId");

                    b.ToTable("OutsideLoanExpenses");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Miscellaneous.AuditorExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ExpenseId");

                    b.ToTable("AuditorExpenses");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Miscellaneous.CerimonyExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ExpenseId");

                    b.ToTable("CerimonyExpenses");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Miscellaneous.DonationExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ExpenseId");

                    b.ToTable("DonationExpenses");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Miscellaneous.GeneralExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ExpenseId");

                    b.ToTable("GeneralExpenses");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Miscellaneous.HomeExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<string>("ExpenseType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ExpenseId");

                    b.ToTable("HomeExpenses");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Miscellaneous.TravelAllowanceExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ExpenseId");

                    b.ToTable("TravelAllowanceExpenses");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Salary.SalaryExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<int>("NonTeaching")
                        .HasColumnType("int");

                    b.Property<int>("Others")
                        .HasColumnType("int");

                    b.Property<string>("SalaryMonth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalaryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalaryYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Teaching")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ExpenseId");

                    b.ToTable("SalaryExpenses");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Telecom.CableExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConnectionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ExpenseId");

                    b.ToTable("CableExpenses");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Telecom.InternetExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConnectionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ExpenseId");

                    b.ToTable("InternetExpenses");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Telecom.TelephoneExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ExpenseId");

                    b.ToTable("TelephoneExpenses");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.VehicleExpense.FuelExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<decimal>("Litres")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OdometerValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ExpenseId");

                    b.HasIndex("VehicleId");

                    b.ToTable("FuelExpenses");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.VehicleExpense.VehicleFeesExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<string>("FeesType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ExpenseId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleFeesExpenses");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.VehicleExpense.VehicleMaintenanceExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ExpenseId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleMaintenanceExpenses");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.VehicleExpense.VehiclePurchaseExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ExpenseId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehiclePurchaseExpenses");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ComparisonName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("Name", "ComparisonName")
                        .IsUnique();

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.FeesHistory", b =>
                {
                    b.Property<int>("BillNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillNumber"));

                    b.Property<int>("AcademicYearId")
                        .HasColumnType("int");

                    b.Property<int>("BookFees")
                        .HasColumnType("int");

                    b.Property<int>("BusFees")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("ExamFees")
                        .HasColumnType("int");

                    b.Property<int>("MiscellaneousFees")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaidOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PreviousYearFees")
                        .HasColumnType("int");

                    b.Property<string>("ReceivedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SchoolManagementFees")
                        .HasColumnType("int");

                    b.Property<int>("SpecialClassFees")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("TotalFeesPaid")
                        .HasColumnType("int");

                    b.Property<int>("TuitionFees")
                        .HasColumnType("int");

                    b.Property<int>("UniformFees")
                        .HasColumnType("int");

                    b.HasKey("BillNumber");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("StudentId");

                    b.ToTable("FeesHistories");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.FeesHistoryArchive", b =>
                {
                    b.Property<int>("FeesHistoryArchiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeesHistoryArchiveId"));

                    b.Property<int>("AcademicYearId")
                        .HasColumnType("int");

                    b.Property<int>("BillNumber")
                        .HasColumnType("int");

                    b.Property<int>("BookFees")
                        .HasColumnType("int");

                    b.Property<int>("BusFees")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("ExamFees")
                        .HasColumnType("int");

                    b.Property<int>("MiscellaneousFees")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaidOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PreviousYearFees")
                        .HasColumnType("int");

                    b.Property<string>("ReceivedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SchoolManagementFees")
                        .HasColumnType("int");

                    b.Property<int>("SpecialClassFees")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("TotalFeesPaid")
                        .HasColumnType("int");

                    b.Property<int>("TuitionFees")
                        .HasColumnType("int");

                    b.Property<int>("UniformFees")
                        .HasColumnType("int");

                    b.HasKey("FeesHistoryArchiveId");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("StudentId");

                    b.ToTable("FeesHistoryArchives");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Locality", b =>
                {
                    b.Property<int>("LocalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocalityId"));

                    b.Property<string>("LocalityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocalityId");

                    b.ToTable("Localities");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.OtherIncome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AcademicYearId")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPersonal")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AcademicYearId");

                    b.ToTable("OtherIncomes");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Role", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Route", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteId"));

                    b.Property<string>("Conductor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Driver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RouteId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.RouteBusStop", b =>
                {
                    b.Property<int>("RouteBusStopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteBusStopId"));

                    b.Property<int>("BusFees")
                        .HasColumnType("int");

                    b.Property<int?>("BusStopId")
                        .HasColumnType("int");

                    b.Property<int?>("RouteId")
                        .HasColumnType("int");

                    b.Property<int>("SpecialClassFees")
                        .HasColumnType("int");

                    b.HasKey("RouteBusStopId");

                    b.HasIndex("BusStopId");

                    b.HasIndex("RouteId");

                    b.ToTable("RouteBusStops");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.RteIncome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AcademicYearId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpectedAmount")
                        .HasColumnType("int");

                    b.Property<int>("ReceivedAmount")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AcademicYearId");

                    b.ToTable("RteIncomes");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Section");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("AadharNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AdmissionNumber")
                        .HasColumnType("int");

                    b.Property<string>("BloodGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caste")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("Community")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ContactNo")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfJoining")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfRelieving")
                        .HasColumnType("datetime2");

                    b.Property<string>("Disability")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmisNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GraduatedYearId")
                        .HasColumnType("int");

                    b.Property<bool>("HasGraduated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRte")
                        .HasColumnType("bit");

                    b.Property<int>("LocalityId")
                        .HasColumnType("int");

                    b.Property<string>("MotherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherTongue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreviousYearFees")
                        .HasColumnType("int");

                    b.Property<string>("Religion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RouteBusStopId")
                        .HasColumnType("int");

                    b.Property<int?>("SectionId")
                        .HasColumnType("int");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.HasIndex("ClassId");

                    b.HasIndex("GraduatedYearId");

                    b.HasIndex("LocalityId");

                    b.HasIndex("RouteBusStopId");

                    b.HasIndex("SectionId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.StudentArchive", b =>
                {
                    b.Property<int>("StudentArchiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentArchiveId"));

                    b.Property<int>("AcademicYearId")
                        .HasColumnType("int");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("PreviousYearFees")
                        .HasColumnType("int");

                    b.Property<int>("RouteBusStopId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("StudentArchiveId");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("ClassId");

                    b.HasIndex("RouteBusStopId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentArchives");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.StudentRegistrationHistory", b =>
                {
                    b.Property<int>("StudentRegistrationHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentRegistrationHistoryId"));

                    b.Property<int>("AdmissionNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfJoining")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfRelieving")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsLastActiveRow")
                        .HasColumnType("bit");

                    b.Property<int>("JoiningAcademicYearId")
                        .HasColumnType("int");

                    b.Property<int>("JoiningClassId")
                        .HasColumnType("int");

                    b.Property<int?>("RelievingAcademicYearId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("RelievingClassId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("StudentRegistrationHistoryId");

                    b.HasIndex("JoiningAcademicYearId");

                    b.HasIndex("JoiningClassId");

                    b.HasIndex("RelievingAcademicYearId");

                    b.HasIndex("RelievingClassId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentRegistrationHistories");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.User", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("ContactNo")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserName");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.UserRolesMapping", b =>
                {
                    b.Property<int>("UserRolesMappingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRolesMappingId"));

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName1")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserRolesMappingId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserName1");

                    b.ToTable("UserRolesMappings");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FuelType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPersonal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSold")
                        .HasColumnType("bit");

                    b.Property<string>("ManufacturedYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<DateTime?>("SaleDate")
                        .HasColumnType("datetime2");

                    b.HasKey("VehicleId");

                    b.HasIndex("RegistrationNumber")
                        .IsUnique();

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.BusFeesArchive", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.AcademicYear", "AcademicYear")
                        .WithMany()
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.BusStop", "BusStop")
                        .WithMany()
                        .HasForeignKey("BusStopId");

                    b.HasOne("SchoolWeb.API.Models.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId");

                    b.Navigation("AcademicYear");

                    b.Navigation("BusStop");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.BusStop", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Locality", "Locality")
                        .WithMany("BusStops")
                        .HasForeignKey("LocalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locality");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.ClassFeesArchive", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.AcademicYear", "AcademicYear")
                        .WithMany()
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcademicYear");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Bill", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Expenses.ExpenseVendorMapper", "ExpenseVendorMapper")
                        .WithMany()
                        .HasForeignKey("ExpenseVendorMapperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpenseVendorMapper");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.BillPaymentHistory", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Expenses.Bill", "Bill")
                        .WithMany("BillPaymentHistories")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Building.BuildingMaterialExpense", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Expenses.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Expenses.Expense", "Expense")
                        .WithMany()
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Expense");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Building.ConstructionLabourExpense", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Expenses.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Expenses.Expense", "Expense")
                        .WithMany()
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Expense");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Building.ElectricityBoardExpense", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Expenses.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Expenses.Expense", "Expense")
                        .WithMany()
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Expense");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Building.RenewalAndLicenseExpense", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Expenses.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Expenses.Expense", "Expense")
                        .WithMany()
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Expense");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.ExpenseVendorMapper", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Expenses.Expense", "Expense")
                        .WithMany("ExpenseVendorMappers")
                        .HasForeignKey("ExpenseId");

                    b.HasOne("SchoolWeb.API.Models.Expenses.Vendor", "Vendor")
                        .WithMany("ExpenseVendorMappers")
                        .HasForeignKey("VendorId");

                    b.Navigation("Expense");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Inventory.BooksAndNotesExpense", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Expenses.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Expenses.Expense", "Expense")
                        .WithMany()
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Expense");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Inventory.StationaryExpense", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Expenses.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Expenses.Expense", "Expense")
                        .WithMany()
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Expense");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Inventory.UniformExpense", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Expenses.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Expenses.Expense", "Expense")
                        .WithMany()
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Expense");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Loan.AuxiloExpense", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Expenses.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Expenses.Expense", "Expense")
                        .WithMany()
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Expense");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Loan.NonEmiLoanPrincipalExpense", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Expenses.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Expenses.Expense", "Expense")
                        .WithMany()
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Expense");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Loan.OutsideLoanExpense", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Expenses.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Expenses.Expense", "Expense")
                        .WithMany()
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Expense");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Miscellaneous.AuditorExpense", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Expenses.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Expenses.Expense", "Expense")
                        .WithMany()
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Expense");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Miscellaneous.CerimonyExpense", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Expenses.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Expenses.Expense", "Expense")
                        .WithMany()
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Expense");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Miscellaneous.DonationExpense", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Expenses.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Expenses.Expense", "Expense")
                        .WithMany()
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Expense");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Miscellaneous.GeneralExpense", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Expenses.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Expenses.Expense", "Expense")
                        .WithMany()
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Expense");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Miscellaneous.HomeExpense", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Expenses.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Expenses.Expense", "Expense")
                        .WithMany()
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Expense");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Miscellaneous.TravelAllowanceExpense", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Expenses.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Expenses.Expense", "Expense")
                        .WithMany()
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Expense");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Salary.SalaryExpense", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Expenses.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Expenses.Expense", "Expense")
                        .WithMany()
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Expense");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Telecom.CableExpense", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Expenses.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Expenses.Expense", "Expense")
                        .WithMany()
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Expense");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Telecom.InternetExpense", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Expenses.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Expenses.Expense", "Expense")
                        .WithMany()
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Expense");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Telecom.TelephoneExpense", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Expenses.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Expenses.Expense", "Expense")
                        .WithMany()
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Expense");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.VehicleExpense.FuelExpense", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Expenses.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Expenses.Expense", "Expense")
                        .WithMany()
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Expense");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.VehicleExpense.VehicleFeesExpense", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Expenses.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Expenses.Expense", "Expense")
                        .WithMany()
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Expense");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.VehicleExpense.VehicleMaintenanceExpense", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Expenses.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Expenses.Expense", "Expense")
                        .WithMany()
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Expense");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.VehicleExpense.VehiclePurchaseExpense", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Expenses.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Expenses.Expense", "Expense")
                        .WithMany()
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Expense");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.FeesHistory", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.AcademicYear", "AcademicYear")
                        .WithMany()
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Student", "Student")
                        .WithMany("FeesHistories")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcademicYear");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.FeesHistoryArchive", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.AcademicYear", "AcademicYear")
                        .WithMany()
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Student", "Student")
                        .WithMany("FeesHistoryArchives")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcademicYear");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.OtherIncome", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.AcademicYear", "AcademicYear")
                        .WithMany()
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcademicYear");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.RouteBusStop", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.BusStop", "BusStop")
                        .WithMany("RouteBustops")
                        .HasForeignKey("BusStopId");

                    b.HasOne("SchoolWeb.API.Models.Route", "Route")
                        .WithMany("RouteBustops")
                        .HasForeignKey("RouteId");

                    b.Navigation("BusStop");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.RteIncome", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.AcademicYear", "AcademicYear")
                        .WithMany()
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcademicYear");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Student", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.AcademicYear", "AcademicYear")
                        .WithMany()
                        .HasForeignKey("GraduatedYearId");

                    b.HasOne("SchoolWeb.API.Models.Locality", "Locality")
                        .WithMany("Students")
                        .HasForeignKey("LocalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.RouteBusStop", "RouteBusStop")
                        .WithMany()
                        .HasForeignKey("RouteBusStopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Section", "Section")
                        .WithMany("Students")
                        .HasForeignKey("SectionId");

                    b.Navigation("AcademicYear");

                    b.Navigation("Class");

                    b.Navigation("Locality");

                    b.Navigation("RouteBusStop");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.StudentArchive", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.AcademicYear", "AcademicYear")
                        .WithMany()
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.RouteBusStop", "RouteBusStop")
                        .WithMany()
                        .HasForeignKey("RouteBusStopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcademicYear");

                    b.Navigation("Class");

                    b.Navigation("RouteBusStop");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.StudentRegistrationHistory", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.AcademicYear", "JoiningAcademicYear")
                        .WithMany()
                        .HasForeignKey("JoiningAcademicYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Class", "JoiningClass")
                        .WithMany()
                        .HasForeignKey("JoiningClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.AcademicYear", "RelievingAcademicYear")
                        .WithMany()
                        .HasForeignKey("RelievingAcademicYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Class", "RelievingClass")
                        .WithMany()
                        .HasForeignKey("RelievingClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JoiningAcademicYear");

                    b.Navigation("JoiningClass");

                    b.Navigation("RelievingAcademicYear");

                    b.Navigation("RelievingClass");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.UserRolesMapping", b =>
                {
                    b.HasOne("SchoolWeb.API.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolWeb.API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserName1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.BusStop", b =>
                {
                    b.Navigation("RouteBustops");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Class", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Bill", b =>
                {
                    b.Navigation("BillPaymentHistories");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Expense", b =>
                {
                    b.Navigation("ExpenseVendorMappers");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Expenses.Vendor", b =>
                {
                    b.Navigation("ExpenseVendorMappers");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Locality", b =>
                {
                    b.Navigation("BusStops");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Route", b =>
                {
                    b.Navigation("RouteBustops");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Section", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("SchoolWeb.API.Models.Student", b =>
                {
                    b.Navigation("FeesHistories");

                    b.Navigation("FeesHistoryArchives");
                });
#pragma warning restore 612, 618
        }
    }
}
